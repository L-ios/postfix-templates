# Argument check for Array/Collection/Map/String/Boolean
.requireTrue : misc-argument requireTrue
    # Boolean
    BOOLEAN                 [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.isTrue($expr$, "the parameter require to be true");
    BOOLEAN                 [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.isTrue($expr$, "the parameter require to be true");
    BOOLEAN                 [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$, "the parameter require to be true");
    BOOLEAN                 [org.springframework.util.Assert]       →  org.springframework.util.Assert.isTrue($expr$, "the parameter require to be true");
    BOOLEAN                                                         →  if(!$expr$){\
                                                                            throw new IllegalArgumentException("the parameter require to be true");\
                                                                       }

.requireNotFalse : misc-argument requireNotFalse
    # Boolean
    BOOLEAN                 [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.isTrue($expr$, "the parameter require not false");
    BOOLEAN                 [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.isTrue($expr$, "the parameter require not false");
    BOOLEAN                 [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$, "the parameter require not false");
    BOOLEAN                 [org.springframework.util.Assert]       →  org.springframework.util.Assert.isTrue($expr$, "the parameter require not false");
    BOOLEAN                                                         →  if(!$expr$){\
                                                                            throw new IllegalArgumentException("the parameter require not false");\
                                                                       }

.requireNotNull : misc-argument requireNotNull
    # Object
    NON_VOID                [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notNull($expr$, "the parameter require not null");
    NON_VOID                [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.notNull($expr$, "the parameter require not null");
    NON_VOID                [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkNotNull($expr$, "the parameter require not null");
    NON_VOID                [org.springframework.util.Assert]       →  org.springframework.util.Assert.notNull($expr$, "the parameter require not null");
    NON_VOID                                                        →  if($expr$ == null){\
                                                                            throw new IllegalArgumentException("the parameter require not null");\
                                                                       }

.requireNotBlank : misc-argument requireNotBlank
    # String
    java.lang.String        [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notBlank($expr$, "the parameter require not blank");
    java.lang.String        [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument(!com.google.common.base.CharMatcher.whitespace().matchesAllOf($exmp$), "the parameter require not blank");
    java.lang.String        [org.springframework.util.Assert]       →  org.springframework.util.Assert.hasText($expr$, "the parameter require not blank");
    java.lang.String                                                →  if ($expr$ == null || $expr$.length() == 0) {\
                                                                            throw new IllegalArgumentException("the parameter require not blank");\
                                                                       }\
                                                                       boolean isBlank = true;\
                                                                       for (int i = 0; i < $expr$.length(); i++) {\
                                                                           if (!Character.isWhitespace($expr$.charAt(i))) {\
                                                                               isBlank=false;\
                                                                               break;\
                                                                           }\
                                                                       }\
                                                                       if(isBlank) {\
                                                                            throw new IllegalArgumentException("the parameter require not blank");\
                                                                       }\

.requireNotEmpty : misc-argument requireNotEmpty
    # Array
    ARRAY                   [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$, "the parameter require not empty");
    ARRAY                   [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.notEmpty($expr$, "the parameter require not empty");
    ARRAY                   [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$ != null && $expr$.length > 0, "the parameter require not empty");
    ARRAY                   [org.springframework.util.Assert]       →  org.springframework.util.Assert.notEmpty($expr$, "the parameter require not empty");
    ARRAY                                                           →  if($expr$ == null || $expr$.length == 0){\
                                                                            throw new IllegalArgumentException("the parameter require not empty");\
                                                                       }
    # Map
    java.util.Map           [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$, "the parameter require not empty");
    java.util.Map           [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.notEmpty($expr$, "the parameter require not empty");
    java.util.Map           [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$ != null && $expr$.size() > 0, "the parameter require not empty");
    java.util.Map           [org.springframework.util.Assert]       →  org.springframework.util.Assert.notEmpty($expr$, "the parameter require not empty");
    java.util.Map                                                   →  if($expr$ == null || $expr$.size() == 0){\
                                                                            throw new IllegalArgumentException("the parameter require not empty");\
                                                                       }
    # Collection
    java.util.Collection    [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$, "the parameter require not empty");
    java.util.Collection    [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.notEmpty($expr$, "the parameter require not empty");
    java.util.Collection    [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$ != null && $expr$.size() > 0, "the parameter require not empty");
    java.util.Collection    [org.springframework.util.Assert]       →  org.springframework.util.Assert.notEmpty($expr$, "the parameter require not empty");
    java.util.Collection                                            →  if($expr$ == null || $expr$.size() == 0){\
                                                                            throw new IllegalArgumentException("the parameter require not empty");\
                                                                       }


.requireNotContainsNull : misc-argument requireNotContainsNull
    # Array
    ARRAY                   [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.noNullElements($expr$, "the parameter require not contains null element");
    ARRAY                   [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.noNullElements($expr$, "the parameter require not contains null element");
    ARRAY                   [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$ != null && !com.google.common.collect.Lists.newArrayList($expr$).contains(null), "the parameter require not contains null element");
    ARRAY                   [org.springframework.util.Assert]       →  org.springframework.util.Assert.notNull($expr$, "the parameter require not null");\
                                                                       org.springframework.util.Assert.noNullElements($expr$, "the parameter require not contains null element");
    ARRAY                                                           →  if ($expr$ != null) {\
                                                                            for (int i = 0; i < $expr$.length; i++) {\
                                                                                if ($expr$[i] == null) {\
                                                                                    throw new IllegalArgumentException("the parameter require not contains null element");\
                                                                                }\
                                                                            }\
                                                                        } else {\
                                                                            throw new IllegalArgumentException("the parameter require not null");\
                                                                        }
    # Collection
    java.lang.Collection    [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.noNullElements($expr$, "the parameter require not contains null element");
    java.util.Collection    [org.apache.commons.lang.Validate]      →  org.apache.commons.lang.Validate.noNullElements($expr$, "the parameter require not contains null element");
    java.util.Collection    [com.google.common.base.Preconditions]  →  com.google.common.base.Preconditions.checkArgument($expr$!=null && !$expr$.contains(null), "the parameter require not contains null element");
    java.util.Collection    [org.springframework.util.Assert]       →  org.springframework.util.Assert.isTrue($expr$!=null && !$expr$.contains(null), "the parameter require not contains null element");
    java.util.Collection                                            →  if($expr$ == null || $expr$.contains(null)){\
                                                                            throw new IllegalArgumentException("the parameter require not contains null element");\
                                                                       }
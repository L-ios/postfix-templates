# Argument Check: org.apache.commons.lang3.Validate
.shouldBeTrue : assert should be true
    BOOLEAN                 [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.isTrue($expr$);

.shouldNotFalse : assert should not be false
    BOOLEAN                 [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.isTrue($expr$);

.shouldNotNull : assert should not be null
    NON_VOID                [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notNull($expr$);

.shouldNotBlank : assert should not be blank
    java.lang.String        [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notBlank($expr$);

.shouldNotEmpty : assert should not be empty
    ARRAY                   [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$);
    java.util.Collection    [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$);
    java.util.Map           [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.notEmpty($expr$);

.shouldNotContainsNull : assert should not contains null elements
    ARRAY                   [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.noNullElements($expr$);
    java.lang.Iterable      [org.apache.commons.lang3.Validate]     →  org.apache.commons.lang3.Validate.noNullElements($expr$);

# Templates for Date and Calendar API: org.apache.commons.lang3.time.DateUtils
.addMilliseconds : commons-lang3 addMilliseconds
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addMilliseconds($expr$, $amount$)

.addSeconds : commons-lang3 addSeconds
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addSeconds($expr$, $amount$)

.addMinutes : commons-lang3 addMinutes
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addMinutes($expr$, $amount$)

.addHours : commons-lang3 addHours
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addHours($expr$, $amount$)

.addDays : commons-lang3 addDays
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addDays($expr$, $amount$)

.addWeeks : commons-lang3 addWeeks
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addWeeks($expr$, $amount$)

.addMonths : commons-lang3 addMonths
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addMonths($expr$, $amount$)

.addYears : commons-lang3 addYears
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.addYears($expr$, $amount$)

.setMilliseconds : commons-lang3 setMilliseconds
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setMilliseconds($expr$, $amount$)

.setSeconds : commons-lang3 setSeconds
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setSeconds($expr$, $amount$)

.setMinutes : commons-lang3 setMinutes
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setMinutes($expr$, $amount$)

.setHours : commons-lang3 setHours
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setHours($expr$, $amount$)

.setDays : commons-lang3 setDays
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setDays($expr$, $amount$)

.setWeeks : commons-lang3 setWeeks
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setWeeks($expr$, $amount$)

.setMonths : commons-lang3 setMonths
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setMonths($expr$, $amount$)

.setYears : commons-lang3 setYears
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.setYears($expr$, $amount$)

.ceilMillisecond : commons-lang3 ceilMillisecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MILLISECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MILLISECOND)

.ceilSecond : commons-lang3 ceilSecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.SECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.SECOND)

.ceilMinute : commons-lang3 ceilMinute
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MINUTE)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MINUTE)

.ceilHour : commons-lang3 ceilHour
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.HOUR_OF_DAY)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.HOUR_OF_DAY)

.ceilDay : commons-lang3 ceilDay
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.DAY_OF_MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.DAY_OF_MONTH)

.ceilMonth : commons-lang3 ceilMonth
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.MONTH)

.ceilYear : commons-lang3 ceilYear
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.YEAR)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.ceiling($expr$, java.util.Calendar.YEAR)

.floorMillisecond : commons-lang3 floorMillisecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MILLISECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MILLISECOND)

.floorSecond : commons-lang3 floorSecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.SECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.SECOND)

.floorMinute : commons-lang3 floorMinute
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MINUTE)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MINUTE)

.floorHour : commons-lang3 floorHour
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.HOUR_OF_DAY)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.HOUR_OF_DAY)

.floorDay : commons-lang3 floorDay
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.DAY_OF_MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.DAY_OF_MONTH)

.floorMonth : commons-lang3 floorMonth
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.MONTH)

.floorYear : commons-lang3 floorYear
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.YEAR)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.truncate($expr$, java.util.Calendar.YEAR)


.roundMillisecond : commons-lang3 roundMillisecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MILLISECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MILLISECOND)

.roundSecond : commons-lang3 roundSecond
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.SECOND)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.SECOND)

.roundMinute : commons-lang3 roundMinute
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MINUTE)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MINUTE)

.roundHour : commons-lang3 roundHour
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.HOUR_OF_DAY)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.HOUR_OF_DAY)

.roundDay : commons-lang3 roundDay
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.DAY_OF_MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.DAY_OF_MONTH)

.roundMonth : commons-lang3 roundMonth
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MONTH)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.MONTH)

.roundYear : commons-lang3 roundYear
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.YEAR)
    java.util.Calendar      [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.round($expr$, java.util.Calendar.YEAR)

.toCalendar : commons-lang3 toCalendar
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.toCalendar($expr$, java.util.TimeZone.getDefault())

.toCalendarWithTimeZone : commons-lang3 toCalendarWithTimeZone
    java.util.Date          [org.apache.commons.lang3.time.DateUtils]   →   org.apache.commons.lang3.time.DateUtils.toCalendar($expr$, java.util.TimeZone.getTimeZone($timeZone$))

# org.apache.commons.lang3.time.DateFormatUtils
.format : common-lang3 format
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd HH:mm:ss SSS")

.formatToMillisecond : common-lang3 formatToMillisecond
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd HH:mm:ss SSS")

.formatToSecond : common-lang3 formatToSecond
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd HH:mm:ss")

.formatToMinute : common-lang3 formatToMinute
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd HH:mm")

.formatToHour : common-lang3 formatToHour
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd HH")

.formatToDay : common-lang3 formatToDay
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM-dd")

.formatToMonth : common-lang3 formatToMonth
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy-MM")

.formatToYear : common-lang3 formatToYear
    java.util.Date [org.apache.commons.lang3.time.DateFormatUtils]     →   org.apache.commons.lang3.time.DateFormatUtils.format($expr$, "yyyy")

# org.apache.commons.lang3.time.FastDateFormat
.parseToDate : common-lang3 parseToDate
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss SSS"$END$).parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromMillisecond : common-lang3 parseToDateFromMillisecond
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss SSS").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromSecond : common-lang3 parseToDateFromSecond
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd HH:mm:ss").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromMinute : common-lang3 parseToDateFromMinute
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd HH:mm").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromHour : common-lang3 parseToDateFromHour
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd HH").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromDay : common-lang3 parseToDateFromDay
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM-dd").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromMonth : common-lang3 parseToDateFromMonth
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy-MM").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

.parseToDateFromYear : common-lang3 parseToDateFromYear
    java.lang.String    [org.apache.commons.lang3.time.FastDateFormat]  → try { java.util.Date $var:suggestVariableName()$ = org.apache.commons.lang3.time.FastDateFormat.getInstance("yyyy").parse($expr$); } catch (ParseException e) { org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(e); }

# org.apache.commons.lang3.exception.ExceptionUtils
.getMessage : common-lang3 getMessage
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getMessage($expr$)

.getRootCause : common-lang3 getRootCause
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getRootCause($expr$)

.getRootCauseMessage : common-lang3 getRootCauseMessage
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseMessage($expr$)

.getRootCauseStackTrace : common-lang3 getRootCauseStackTrace
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace($expr$)

.getStackFrames : common-lang3 getStackFrames
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames($expr$)

.getThrowableCount : common-lang3 getThrowableCount
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount($expr$)

.getThrowableList : common-lang3 getThrowableList
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList($expr$)

.getThrowableArray : common-lang3 getThrowableList
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getThrowables($expr$)

.getStackTraceAsString : common-lang3 getStackTraceAsString
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace($expr$)

.printRootCauseStackTrace : commons-lang3 printRootCauseStackTrace
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace($expr$)

.rethrow : commons-lang3 rethrow
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.rethrow($expr$)

.wrapAndThrow : commons-lang3 wrapAndThrow
    java.lang.Throwable [org.apache.commons.lang3.exception.ExceptionUtils]     →   org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow($expr$)